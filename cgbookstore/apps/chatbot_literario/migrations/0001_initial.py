# Generated by Django 5.1.8 on 2025-07-23 13:21

import django.core.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ChatAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(db_index=True, help_text='ID da sessão para agrupar interações de um mesmo usuário anônimo.', max_length=100)),
                ('intent', models.CharField(db_index=True, help_text="Intenção detectada pelo chatbot (ex: 'search', 'recommendation').", max_length=100)),
                ('response_time', models.FloatField(help_text='Tempo de resposta do chatbot em segundos.')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now, help_text='Data e hora da interação.')),
            ],
            options={
                'verbose_name': 'Análise do Chat',
                'verbose_name_plural': 'Análises do Chat',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('context_data', models.JSONField(blank=True, default=dict, help_text='Armazena o contexto da conversa, se necessário.')),
                ('is_training_session', models.BooleanField(default=False, help_text='Indica se esta conversa é do simulador de treinamento', verbose_name='Sessão de Treinamento')),
                ('title', models.CharField(blank=True, help_text='Título descritivo da conversa', max_length=200, verbose_name='Título')),
            ],
            options={
                'verbose_name': 'Conversa do Chatbot',
                'verbose_name_plural': 'Conversas do Chatbot',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='ConversationFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('helpful', models.BooleanField(default=True, help_text='Indica se o usuário considerou a resposta útil.', verbose_name='Foi útil?')),
                ('comment', models.TextField(blank=True, help_text='Comentário opcional do usuário.', null=True, verbose_name='Comentário')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Data do Feedback')),
            ],
            options={
                'verbose_name': 'Feedback de Conversa',
                'verbose_name_plural': 'Feedbacks de Conversas',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='KnowledgeItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(help_text='A pergunta ou padrão de consulta do usuário.', unique=True)),
                ('answer', models.TextField(help_text='A resposta que o chatbot deve fornecer.')),
                ('category', models.CharField(db_index=True, default='general', help_text="Categoria do conhecimento (ex: 'saudação', 'preços', 'autores').", max_length=100)),
                ('source', models.CharField(blank=True, help_text="Origem da informação (ex: 'manual', 'learned_from_chat').", max_length=255, null=True)),
                ('confidence', models.FloatField(default=0.8, help_text='Nível de confiança na exatidão da resposta (0.0 a 1.0).', validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(1.0)])),
                ('embedding', models.JSONField(blank=True, help_text='Vetor de embedding para a busca semântica.', null=True)),
                ('active', models.BooleanField(db_index=True, default=True, help_text='Indica se o item de conhecimento está ativo e pode ser usado.')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Item de Conhecimento',
                'verbose_name_plural': 'Itens de Conhecimento',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sender', models.CharField(choices=[('user', 'Usuário'), ('bot', 'Chatbot')], max_length=10)),
                ('was_corrected', models.BooleanField(default=False, help_text='Indica se esta resposta foi corrigida via treinamento', verbose_name='Foi Corrigida')),
                ('corrected_response', models.TextField(blank=True, help_text='A resposta correta fornecida durante o treinamento', verbose_name='Resposta Corrigida')),
                ('corrected_at', models.DateTimeField(blank=True, help_text='Data e hora da correção', null=True, verbose_name='Corrigida em')),
                ('content', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Mensagem do Chatbot',
                'verbose_name_plural': 'Mensagens do Chatbot',
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='TrainingSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(blank=True, help_text='Identificador único da sessão de treinamento', max_length=100, verbose_name='ID da Sessão')),
                ('training_type', models.CharField(choices=[('manual_correction', 'Correção Manual via Simulador'), ('manual_addition', 'Adição Manual de Conhecimento'), ('bulk_training', 'Treinamento em Lote'), ('auto_learning', 'Aprendizado Automático'), ('embedding_update', 'Atualização de Embeddings'), ('knowledge_cleanup', 'Limpeza da Base de Conhecimento')], default='manual_correction', max_length=20, verbose_name='Tipo de Treinamento')),
                ('original_question', models.TextField(help_text='Pergunta que gerou a necessidade de treinamento', verbose_name='Pergunta Original')),
                ('original_answer', models.TextField(blank=True, help_text='Resposta incorreta que foi dada pelo sistema', verbose_name='Resposta Original')),
                ('corrected_answer', models.TextField(help_text='Resposta correta fornecida durante o treinamento', verbose_name='Resposta Corrigida')),
                ('notes', models.TextField(blank=True, help_text='Notas adicionais sobre a sessão de treinamento', verbose_name='Observações')),
                ('success', models.BooleanField(default=True, help_text='Indica se o treinamento foi aplicado com sucesso', verbose_name='Sucesso')),
                ('error_message', models.TextField(blank=True, help_text='Detalhes do erro caso o treinamento tenha falhado', verbose_name='Mensagem de Erro')),
                ('response_time', models.FloatField(blank=True, help_text='Tempo que levou para processar o treinamento', null=True, verbose_name='Tempo de Resposta (ms)')),
                ('confidence_score', models.FloatField(blank=True, help_text='Score de confiança na correção aplicada (0.0 a 1.0)', null=True, verbose_name='Score de Confiança')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
            ],
            options={
                'verbose_name': 'Sessão de Treinamento',
                'verbose_name_plural': 'Sessões de Treinamento',
                'ordering': ['-created_at'],
            },
        ),
    ]
