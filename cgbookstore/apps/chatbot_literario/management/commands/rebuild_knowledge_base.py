from django.core.management.base import BaseCommand
from cgbookstore.apps.chatbot_literario.models import KnowledgeItem
from cgbookstore.apps.chatbot_literario.services.training_service import training_service
from django.db import transaction
import json


class Command(BaseCommand):
    help = 'Reconstr√≥i a base de conhecimento com dados limpos e organizados'

    def add_arguments(self, parser):
        parser.add_argument(
            '--dry-run',
            action='store_true',
            help='Apenas mostra o que seria adicionado, sem adicionar'
        )
        parser.add_argument(
            '--clear-first',
            action='store_true',
            help='Limpa a base antes de adicionar novos dados'
        )

    def handle(self, *args, **options):
        dry_run = options['dry_run']
        clear_first = options['clear_first']

        self.stdout.write("=" * 60)
        self.stdout.write("üèóÔ∏è RECONSTRU√á√ÉO DA BASE DE CONHECIMENTO")
        self.stdout.write("=" * 60)

        # Verificar estado atual
        current_count = KnowledgeItem.objects.filter(active=True).count()
        self.stdout.write(f"\nüìä Estado atual: {current_count} itens ativos na base")

        if clear_first and current_count > 0:
            if not dry_run:
                self.stdout.write(f"\nüßπ Limpando base atual...")
                KnowledgeItem.objects.filter(active=True).delete()
                self.stdout.write(f"   ‚úÖ {current_count} itens removidos")
            else:
                self.stdout.write(f"\nüîç DRY-RUN: {current_count} itens seriam removidos")

        # Base de conhecimento estruturada
        knowledge_base = self._get_structured_knowledge()

        self.stdout.write(f"\nüìã Preparando para adicionar {len(knowledge_base)} itens...")

        if dry_run:
            self._show_preview(knowledge_base)
        else:
            self._populate_database(knowledge_base)

        self.stdout.write(f"\n" + "=" * 60)
        self.stdout.write(f"üèÅ RECONSTRU√á√ÉO CONCLU√çDA")
        self.stdout.write(f"=" * 60)

    def _get_structured_knowledge(self):
        """Retorna a base de conhecimento estruturada e limpa."""

        knowledge_base = []

        # ===== SE√á√ÉO 1: LITERATURA CL√ÅSSICA E POPULAR =====
        literature_data = [
            # Harry Potter
            {
                "question": "Quem escreveu Harry Potter?",
                "answer": "Harry Potter foi escrito por J.K. Rowling.",
                "category": "Literatura",
                "source": "conhecimento_geral"
            },
            {
                "question": "Quem √© J.K. Rowling?",
                "answer": "J.K. Rowling √© uma escritora brit√¢nica, autora da famosa s√©rie Harry Potter. Seu nome completo √© Joanne Rowling.",
                "category": "Autores",
                "source": "conhecimento_geral"
            },
            {
                "question": "Quais livros J.K. Rowling escreveu?",
                "answer": "J.K. Rowling escreveu a s√©rie Harry Potter (7 livros), Os Contos de Beedle, o Bardo, Animais Fant√°sticos e Onde Habitam, e a s√©rie Cormoran Strike (sob pseud√¥nimo Robert Galbraith).",
                "category": "Literatura",
                "source": "conhecimento_geral"
            },
            {
                "question": "Qual foi o primeiro livro de Harry Potter?",
                "answer": "O primeiro livro foi 'Harry Potter e a Pedra Filosofal' (ou 'Pedra do Feiticeiro' nos EUA), publicado em 1997.",
                "category": "Literatura",
                "source": "conhecimento_geral"
            },

            # J.R.R. Tolkien
            {
                "question": "Quem escreveu O Senhor dos An√©is?",
                "answer": "O Senhor dos An√©is foi escrito por J.R.R. Tolkien.",
                "category": "Literatura",
                "source": "conhecimento_geral"
            },
            {
                "question": "Quem escreveu O Hobbit?",
                "answer": "O Hobbit foi escrito por J.R.R. Tolkien.",
                "category": "Literatura",
                "source": "conhecimento_geral"
            },
            {
                "question": "Quem √© J.R.R. Tolkien?",
                "answer": "J.R.R. Tolkien foi um escritor brit√¢nico, professor e fil√≥logo, famoso por criar a Terra-m√©dia e escrever O Hobbit e O Senhor dos An√©is.",
                "category": "Autores",
                "source": "conhecimento_geral"
            },
            {
                "question": "Quais livros Tolkien escreveu?",
                "answer": "Tolkien escreveu O Hobbit, a trilogia O Senhor dos An√©is, O Silmarillion, Contos Inacabados, e muitas outras obras sobre a Terra-m√©dia.",
                "category": "Literatura",
                "source": "conhecimento_geral"
            },

            # Literatura Brasileira
            {
                "question": "Quem escreveu Dom Casmurro?",
                "answer": "Dom Casmurro foi escrito por Machado de Assis.",
                "category": "Literatura Brasileira",
                "source": "conhecimento_geral"
            },
            {
                "question": "Quem √© Machado de Assis?",
                "answer": "Machado de Assis foi um escritor brasileiro, considerado um dos maiores nomes da literatura brasileira. Escreveu Dom Casmurro, O Corti√ßo, e muitas outras obras cl√°ssicas.",
                "category": "Autores Brasileiros",
                "source": "conhecimento_geral"
            },
            {
                "question": "Quais livros Machado de Assis escreveu?",
                "answer": "Machado de Assis escreveu Dom Casmurro, O Corti√ßo, Mem√≥rias P√≥stumas de Br√°s Cubas, Quincas Borba, Helena, A M√£o e a Luva, entre outros.",
                "category": "Literatura Brasileira",
                "source": "conhecimento_geral"
            },

            # Outros Cl√°ssicos
            {
                "question": "Quem escreveu 1984?",
                "answer": "1984 foi escrito por George Orwell.",
                "category": "Literatura",
                "source": "conhecimento_geral"
            },
            {
                "question": "Quem escreveu Os Miser√°veis?",
                "answer": "Os Miser√°veis foi escrito por Victor Hugo.",
                "category": "Literatura",
                "source": "conhecimento_geral"
            },
        ]

        # ===== SE√á√ÉO 2: NAVEGA√á√ÉO DO SITE =====
        navigation_data = [
            {
                "question": "Como encontrar livros no site?",
                "answer": "Voc√™ pode encontrar livros usando a barra de pesquisa no topo da p√°gina, navegando pelas categorias, ou visitando a se√ß√£o 'Cat√°logo' no menu principal.",
                "category": "Navega√ß√£o",
                "source": "site_features"
            },
            {
                "question": "Como funciona a pesquisa de livros?",
                "answer": "A pesquisa permite buscar por t√≠tulo, autor, g√™nero ou palavras-chave. Use a barra de pesquisa e os filtros para refinar seus resultados.",
                "category": "Navega√ß√£o",
                "source": "site_features"
            },
            {
                "question": "Onde encontro as recomenda√ß√µes?",
                "answer": "As recomenda√ß√µes personalizadas est√£o dispon√≠veis na p√°gina inicial, na se√ß√£o 'Recomendado para Voc√™', e tamb√©m na sua p√°gina de perfil.",
                "category": "Recomenda√ß√µes",
                "source": "site_features"
            },
            {
                "question": "Como organizar minha estante?",
                "answer": "Acesse sua p√°gina de perfil e use as abas 'Lendo', 'Quero Ler', 'Lidos' e 'Favoritos' para organizar seus livros. Voc√™ pode adicionar livros clicando no √≠cone da estante em cada livro.",
                "category": "Perfil",
                "source": "site_features"
            },
            {
                "question": "Como criar uma conta?",
                "answer": "Clique em 'Cadastrar' no menu superior, preencha seus dados (nome, email, senha) e confirme seu cadastro. Voc√™ tamb√©m pode fazer login com redes sociais.",
                "category": "Conta",
                "source": "site_features"
            },
            {
                "question": "Como editar meu perfil?",
                "answer": "Acesse sua p√°gina de perfil clicando no seu nome no menu superior, depois clique em 'Editar Perfil' para alterar suas informa√ß√µes e prefer√™ncias.",
                "category": "Perfil",
                "source": "site_features"
            },
            {
                "question": "Onde vejo meu hist√≥rico de leitura?",
                "answer": "Seu hist√≥rico de leitura est√° na sua p√°gina de perfil, na aba 'Lidos', onde voc√™ pode ver todos os livros que marcou como lidos.",
                "category": "Perfil",
                "source": "site_features"
            },
        ]

        # ===== SE√á√ÉO 3: FUNCIONALIDADES DO CHATBOT =====
        chatbot_data = [
            {
                "question": "O que voc√™ pode fazer?",
                "answer": "Posso ajudar com informa√ß√µes sobre livros e autores, orientar sobre como usar o site, dar recomenda√ß√µes de leitura e responder d√∫vidas sobre navega√ß√£o e funcionalidades.",
                "category": "Ajuda",
                "source": "chatbot_features"
            },
            {
                "question": "Como voc√™ funciona?",
                "answer": "Sou um assistente liter√°rio que usa intelig√™ncia artificial para entender suas perguntas e fornecer respostas relevantes sobre livros, autores e o funcionamento do site.",
                "category": "Ajuda",
                "source": "chatbot_features"
            },
            {
                "question": "Pode recomendar livros?",
                "answer": "Sim! Posso recomendar livros baseados em seus gostos. Me diga que g√™neros voc√™ gosta, autores favoritos, ou que tipo de hist√≥ria est√° procurando.",
                "category": "Recomenda√ß√µes",
                "source": "chatbot_features"
            },
            {
                "question": "Como fazer uma pergunta?",
                "answer": "√â simples! Apenas digite sua pergunta naturalmente. Posso entender perguntas sobre livros espec√≠ficos, autores, g√™neros, ou como usar o site.",
                "category": "Ajuda",
                "source": "chatbot_features"
            },
        ]

        # ===== SE√á√ÉO 4: RECOMENDA√á√ïES POR G√äNERO =====
        recommendations_data = [
            {
                "question": "Recomende livros de fantasia",
                "answer": "√ìtimas op√ß√µes de fantasia: O Senhor dos An√©is (Tolkien), Harry Potter (J.K. Rowling), As Cr√¥nicas de N√°rnia (C.S. Lewis), A Roda do Tempo (Robert Jordan), e O Nome do Vento (Patrick Rothfuss).",
                "category": "Recomenda√ß√µes",
                "source": "genre_recommendations"
            },
            {
                "question": "Recomende livros de fic√ß√£o cient√≠fica",
                "answer": "Excelentes livros de fic√ß√£o cient√≠fica: Duna (Frank Herbert), 1984 (George Orwell), Funda√ß√£o (Isaac Asimov), Neuromancer (William Gibson), e O Guia do Mochileiro das Gal√°xias (Douglas Adams).",
                "category": "Recomenda√ß√µes",
                "source": "genre_recommendations"
            },
            {
                "question": "Recomende livros de romance",
                "answer": "Romances imperd√≠veis: Orgulho e Preconceito (Jane Austen), Como Eu Era Antes de Voc√™ (Jojo Moyes), O Morro dos Ventos Uivantes (Emily Bront√´), A Culpa √© das Estrelas (John Green).",
                "category": "Recomenda√ß√µes",
                "source": "genre_recommendations"
            },
            {
                "question": "Recomende literatura brasileira",
                "answer": "Cl√°ssicos brasileiros: Dom Casmurro (Machado de Assis), Grande Sert√£o: Veredas (Guimar√£es Rosa), Capit√£es da Areia (Jorge Amado), O Corti√ßo (Alu√≠sio Azevedo), e Cidade de Deus (Paulo Lins).",
                "category": "Recomenda√ß√µes",
                "source": "genre_recommendations"
            },
        ]

        # ===== SE√á√ÉO 5: AJUDA E SUPORTE =====
        help_data = [
            {
                "question": "Preciso de ajuda",
                "answer": "Estou aqui para ajudar! Posso responder sobre livros, autores, como usar o site, criar conta, organizar sua estante, ou qualquer d√∫vida sobre navega√ß√£o. O que voc√™ gostaria de saber?",
                "category": "Ajuda",
                "source": "support"
            },
            {
                "question": "Como entrar em contato?",
                "answer": "Voc√™ pode usar este chat para tirar d√∫vidas imediatamente, ou acessar a p√°gina 'Contato' no menu para enviar uma mensagem mais detalhada para nossa equipe.",
                "category": "Suporte",
                "source": "support"
            },
            {
                "question": "Esqueci minha senha",
                "answer": "Na p√°gina de login, clique em 'Esqueci minha senha', digite seu email cadastrado e voc√™ receber√° instru√ß√µes para criar uma nova senha.",
                "category": "Conta",
                "source": "support"
            },
            {
                "question": "O site n√£o est√° funcionando",
                "answer": "Tente atualizar a p√°gina ou limpar o cache do navegador. Se o problema persistir, entre em contato conosco atrav√©s da p√°gina de contato com detalhes do erro.",
                "category": "Suporte",
                "source": "support"
            },
        ]

        # Combinar todas as se√ß√µes
        knowledge_base.extend(literature_data)
        knowledge_base.extend(navigation_data)
        knowledge_base.extend(chatbot_data)
        knowledge_base.extend(recommendations_data)
        knowledge_base.extend(help_data)

        return knowledge_base

    def _show_preview(self, knowledge_base):
        """Mostra preview do que seria adicionado."""
        self.stdout.write(f"\nüîç PREVIEW - DRY RUN")
        self.stdout.write("-" * 40)

        # Contar por categoria
        categories = {}
        for item in knowledge_base:
            cat = item['category']
            if cat not in categories:
                categories[cat] = 0
            categories[cat] += 1

        self.stdout.write(f"\nüìä Itens por categoria:")
        for category, count in categories.items():
            self.stdout.write(f"   üìö {category}: {count} itens")

        self.stdout.write(f"\nüìã Primeiros 5 itens que seriam adicionados:")
        for i, item in enumerate(knowledge_base[:5], 1):
            self.stdout.write(f"\n   {i}. [{item['category']}]")
            self.stdout.write(f"      P: {item['question']}")
            self.stdout.write(f"      R: {item['answer'][:60]}...")

        if len(knowledge_base) > 5:
            self.stdout.write(f"   ... e mais {len(knowledge_base) - 5} itens")

    def _populate_database(self, knowledge_base):
        """Popula o banco com os dados da base de conhecimento."""
        self.stdout.write(f"\nüèóÔ∏è Adicionando itens √† base de dados...")

        added_count = 0
        failed_count = 0

        with transaction.atomic():
            for i, item_data in enumerate(knowledge_base, 1):
                try:
                    # Verificar se j√° existe
                    existing = KnowledgeItem.objects.filter(
                        question=item_data['question'],
                        active=True
                    ).first()

                    if existing:
                        self.stdout.write(f"   ‚ö†Ô∏è  Item {i} j√° existe: {item_data['question'][:40]}...")
                        continue

                    # Criar novo item
                    knowledge_item = KnowledgeItem.objects.create(
                        question=item_data['question'],
                        answer=item_data['answer'],
                        category=item_data['category'],
                        source=item_data['source'],
                        active=True
                    )

                    added_count += 1

                    if added_count <= 5:  # Mostrar apenas os primeiros 5
                        self.stdout.write(f"   ‚úÖ Adicionado: {item_data['question'][:50]}...")

                except Exception as e:
                    failed_count += 1
                    self.stdout.write(f"   ‚ùå Erro item {i}: {e}")

        if added_count > 5:
            self.stdout.write(f"   ... e mais {added_count - 5} itens adicionados")

        self.stdout.write(f"\nüìä Resultado:")
        self.stdout.write(f"   ‚úÖ {added_count} itens adicionados com sucesso")
        if failed_count > 0:
            self.stdout.write(f"   ‚ùå {failed_count} itens falharam")

        # Atualizar embeddings
        self.stdout.write(f"\nüîÑ Atualizando embeddings...")
        try:
            # Reinicializar servi√ßo de treinamento
            training_service.initialized = False
            training_service.initialize()
            self.stdout.write(f"   ‚úÖ Embeddings atualizados com sucesso")
        except Exception as e:
            self.stdout.write(f"   ‚ö†Ô∏è  Erro ao atualizar embeddings: {e}")
            self.stdout.write(f"   üí° Execute manualmente: python manage.py update_embeddings")

        # Status final
        final_count = KnowledgeItem.objects.filter(active=True).count()
        self.stdout.write(f"\nüìä Base de conhecimento atual: {final_count} itens ativos")

        # Instru√ß√µes finais
        self.stdout.write(f"\nüí° Pr√≥ximos passos:")
        self.stdout.write(f"   1. Reinicie o servidor: Ctrl+C, depois python manage.py runserver")
        self.stdout.write(f"   2. Teste o chatbot: python manage.py verify_chatbot_version --user-id 2")
        self.stdout.write(f"   3. Teste conversas contextuais com Harry Potter e J.K. Rowling")