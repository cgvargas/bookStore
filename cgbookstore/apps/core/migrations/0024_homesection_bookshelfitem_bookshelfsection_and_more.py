# Generated by Django 5.1.4 on 2025-02-10 13:32

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0023_delete_recommendationinteraction'),
    ]

    operations = [
        migrations.CreateModel(
            name='HomeSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título')),
                ('tipo', models.CharField(choices=[('shelf', 'Prateleira de Livros'), ('video', 'Seção de Vídeos'), ('ad', 'Área de Propaganda'), ('link_grid', 'Grade de Links'), ('banner', 'Banner Personalizado'), ('custom', 'Seção Personalizada')], max_length=20, verbose_name='Tipo de Seção')),
                ('ordem', models.IntegerField(default=0, verbose_name='Ordem de Exibição')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('css_class', models.CharField(blank=True, max_length=100, verbose_name='Classe CSS')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
            ],
            options={
                'verbose_name': 'Seção da Home',
                'verbose_name_plural': 'Seções da Home',
                'ordering': ['ordem', 'titulo'],
            },
        ),
        migrations.CreateModel(
            name='BookShelfItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordem', models.IntegerField(default=0, verbose_name='Ordem')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('livro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.book')),
            ],
            options={
                'ordering': ['ordem', '-added_at'],
            },
        ),
        migrations.CreateModel(
            name='BookShelfSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_shelf', models.CharField(choices=[('latest', 'Últimos Adicionados'), ('bestsellers', 'Mais Vendidos'), ('most_viewed', 'Mais Acessados'), ('featured', 'Destaques'), ('movies', 'Adaptados para Filme/Série'), ('manga', 'Mangás'), ('custom', 'Personalizada')], max_length=20, verbose_name='Tipo de Prateleira')),
                ('max_livros', models.IntegerField(default=12, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(50)], verbose_name='Máximo de Livros')),
                ('livros', models.ManyToManyField(related_name='home_shelves', through='core.BookShelfItem', to='core.book', verbose_name='Livros')),
                ('section', models.OneToOneField(limit_choices_to={'tipo': 'shelf'}, on_delete=django.db.models.deletion.CASCADE, related_name='book_shelf', to='core.homesection')),
            ],
        ),
        migrations.AddField(
            model_name='bookshelfitem',
            name='shelf',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.bookshelfsection'),
        ),
        migrations.CreateModel(
            name='Advertisement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imagem', models.ImageField(upload_to='ads/', verbose_name='Imagem')),
                ('url', models.URLField(verbose_name='URL de Destino')),
                ('data_inicio', models.DateTimeField(verbose_name='Data de Início')),
                ('data_fim', models.DateTimeField(verbose_name='Data de Término')),
                ('clicks', models.IntegerField(default=0, verbose_name='Contagem de Cliques')),
                ('section', models.OneToOneField(limit_choices_to={'tipo': 'ad'}, on_delete=django.db.models.deletion.CASCADE, related_name='advertisement', to='core.homesection')),
            ],
        ),
        migrations.CreateModel(
            name='LinkGridItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título')),
                ('imagem', models.ImageField(upload_to='links/', verbose_name='Imagem')),
                ('url', models.URLField(verbose_name='URL')),
                ('ordem', models.IntegerField(default=0, verbose_name='Ordem')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('section', models.ForeignKey(limit_choices_to={'tipo': 'link_grid'}, on_delete=django.db.models.deletion.CASCADE, related_name='link_items', to='core.homesection')),
            ],
            options={
                'ordering': ['ordem'],
            },
        ),
        migrations.CreateModel(
            name='VideoSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(verbose_name='URL do Vídeo')),
                ('thumbnail', models.ImageField(blank=True, upload_to='videos/thumbnails/', verbose_name='Thumbnail')),
                ('ordem', models.IntegerField(default=0, verbose_name='Ordem')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('section', models.OneToOneField(limit_choices_to={'tipo': 'video'}, on_delete=django.db.models.deletion.CASCADE, related_name='video_section', to='core.homesection')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='bookshelfitem',
            unique_together={('shelf', 'livro')},
        ),
    ]
