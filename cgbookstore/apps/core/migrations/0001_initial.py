# Generated by Django 5.1.8 on 2025-07-23 13:21

import cgbookstore.apps.core.models.profile
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import stdimage.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True)),
                ('name', models.CharField(max_length=100, verbose_name='Nome')),
                ('description', models.TextField(verbose_name='Descrição')),
                ('icon', models.CharField(help_text="Classe do ícone Bootstrap (ex: 'bi-book')", max_length=50)),
                ('category', models.CharField(choices=[('reading', 'Leitura'), ('collection', 'Coleção'), ('social', 'Social'), ('exploration', 'Exploração'), ('special', 'Especial')], max_length=20, verbose_name='Categoria')),
                ('tier', models.CharField(choices=[('bronze', 'Bronze'), ('silver', 'Prata'), ('gold', 'Ouro'), ('platinum', 'Platina')], default='bronze', max_length=10, verbose_name='Nível')),
                ('points', models.IntegerField(default=10, verbose_name='Pontos')),
                ('requirement', models.JSONField(blank=True, default=dict, verbose_name='Requisitos')),
                ('is_secret', models.BooleanField(default=False, verbose_name='Secreto')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Conquista',
                'verbose_name_plural': 'Conquistas',
                'ordering': ['category', 'tier', 'points'],
            },
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=200, verbose_name='Nome')),
                ('sobrenome', models.CharField(blank=True, max_length=200, verbose_name='Sobrenome')),
                ('slug', models.SlugField(blank=True, max_length=250, unique=True, verbose_name='Slug')),
                ('foto', models.ImageField(blank=True, null=True, upload_to='autores/', verbose_name='Foto')),
                ('biografia', models.TextField(blank=True, verbose_name='Biografia')),
                ('data_nascimento', models.DateField(blank=True, null=True, verbose_name='Data de Nascimento')),
                ('nacionalidade', models.CharField(blank=True, max_length=100, verbose_name='Nacionalidade')),
                ('website', models.URLField(blank=True, verbose_name='Website')),
                ('twitter', models.CharField(blank=True, max_length=100, verbose_name='Twitter')),
                ('instagram', models.CharField(blank=True, max_length=100, verbose_name='Instagram')),
                ('facebook', models.CharField(blank=True, max_length=100, verbose_name='Facebook')),
                ('destaque', models.BooleanField(default=False, verbose_name='Destaque')),
                ('ordem', models.IntegerField(default=0, verbose_name='Ordem')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
            ],
            options={
                'verbose_name': 'Autor',
                'verbose_name_plural': 'Autores',
                'ordering': ['nome', 'sobrenome'],
            },
        ),
        migrations.CreateModel(
            name='AuthorSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo_secundario', models.CharField(blank=True, max_length=200, verbose_name='Subtítulo')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição da Seção')),
                ('mostrar_biografia', models.BooleanField(default=True, verbose_name='Mostrar Biografia')),
                ('apenas_destaque', models.BooleanField(default=False, verbose_name='Apenas Autores em Destaque')),
                ('max_autores', models.IntegerField(default=4, verbose_name='Máximo de Autores')),
                ('ordem_exibicao', models.CharField(choices=[('nome', 'Nome'), ('livros', 'Quantidade de Livros'), ('recentes', 'Mais Recentes'), ('manual', 'Ordem Manual')], default='nome', max_length=20, verbose_name='Ordenar por')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
            ],
            options={
                'verbose_name': 'Seção de Autores',
                'verbose_name_plural': 'Seções de Autores',
            },
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título')),
                ('subtitulo', models.CharField(blank=True, max_length=300, verbose_name='Subtítulo')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição')),
                ('imagem', models.ImageField(upload_to='banners/', verbose_name='Imagem')),
                ('imagem_mobile', models.ImageField(blank=True, null=True, upload_to='banners/mobile/', verbose_name='Imagem Mobile')),
                ('link', models.URLField(blank=True, max_length=500, verbose_name='Link')),
                ('ordem', models.IntegerField(default=0, verbose_name='Ordem de exibição')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('data_inicio', models.DateTimeField(verbose_name='Data de início')),
                ('data_fim', models.DateTimeField(verbose_name='Data de fim')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
            ],
            options={
                'verbose_name': 'Banner',
                'verbose_name_plural': 'Banners',
                'ordering': ['ordem', '-data_inicio'],
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título')),
                ('subtitulo', models.CharField(blank=True, max_length=200, verbose_name='Subtítulo')),
                ('autor', models.CharField(max_length=200, verbose_name='Autor')),
                ('tradutor', models.CharField(blank=True, max_length=200, verbose_name='Tradutor')),
                ('ilustrador', models.CharField(blank=True, max_length=200, verbose_name='Ilustrador')),
                ('editora', models.CharField(blank=True, max_length=100, verbose_name='Editora')),
                ('isbn', models.CharField(blank=True, max_length=13, verbose_name='ISBN')),
                ('edicao', models.CharField(blank=True, max_length=50, verbose_name='Edição')),
                ('data_publicacao', models.DateField(blank=True, null=True, verbose_name='Data de Publicação')),
                ('numero_paginas', models.IntegerField(blank=True, null=True, verbose_name='Número de Páginas')),
                ('idioma', models.CharField(blank=True, max_length=50, verbose_name='Idioma')),
                ('formato', models.CharField(blank=True, max_length=50, verbose_name='Formato')),
                ('dimensoes', models.CharField(blank=True, max_length=50, verbose_name='Dimensões')),
                ('peso', models.CharField(blank=True, max_length=20, verbose_name='Peso')),
                ('preco', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Preço')),
                ('preco_promocional', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Preço Promocional')),
                ('categoria', models.CharField(blank=True, max_length=100, verbose_name='Categoria')),
                ('genero', models.CharField(blank=True, max_length=100, verbose_name='Gênero Literário')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição')),
                ('temas', models.TextField(blank=True, verbose_name='Temas')),
                ('personagens', models.TextField(blank=True, verbose_name='Personagens Principais')),
                ('enredo', models.TextField(blank=True, verbose_name='Enredo')),
                ('publico_alvo', models.CharField(blank=True, max_length=100, verbose_name='Público-alvo')),
                ('premios', models.TextField(blank=True, verbose_name='Prêmios')),
                ('adaptacoes', models.TextField(blank=True, verbose_name='Adaptações')),
                ('colecao', models.CharField(blank=True, max_length=200, verbose_name='Coleção')),
                ('classificacao', models.CharField(blank=True, max_length=50, verbose_name='Classificação Indicativa')),
                ('localizacao', models.CharField(blank=True, max_length=100, verbose_name='Localização na Biblioteca')),
                ('capa', models.ImageField(blank=True, null=True, upload_to='livros/capas/', verbose_name='Capa')),
                ('capa_preview', models.ImageField(blank=True, null=True, upload_to='livros/capas/previews/', verbose_name='Preview da Capa')),
                ('capa_url', models.URLField(blank=True, max_length=500, verbose_name='URL da Capa')),
                ('external_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='ID Externo')),
                ('is_temporary', models.BooleanField(default=False, verbose_name='É Temporário')),
                ('external_data', models.JSONField(blank=True, null=True, verbose_name='Dados Externos')),
                ('origem', models.CharField(default='local', max_length=50, verbose_name='Origem')),
                ('website', models.URLField(blank=True, verbose_name='Website')),
                ('redes_sociais', models.JSONField(blank=True, default=dict, verbose_name='Redes Sociais')),
                ('citacoes', models.TextField(blank=True, verbose_name='Citações')),
                ('curiosidades', models.TextField(blank=True, verbose_name='Curiosidades')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('e_lancamento', models.BooleanField(default=False, verbose_name='É lançamento')),
                ('quantidade_vendida', models.IntegerField(default=0, verbose_name='Quantidade vendida')),
                ('quantidade_acessos', models.IntegerField(default=0, verbose_name='Quantidade de acessos')),
                ('e_destaque', models.BooleanField(default=False, verbose_name='Em destaque')),
                ('adaptado_filme', models.BooleanField(default=False, verbose_name='Adaptado para filme/série')),
                ('e_manga', models.BooleanField(default=False, verbose_name='É manga')),
                ('ordem_exibicao', models.IntegerField(default=0, verbose_name='Ordem de exibição')),
                ('tipo_shelf_especial', models.CharField(blank=True, max_length=50, verbose_name='Prateleira')),
            ],
            options={
                'verbose_name': 'Livro',
                'verbose_name_plural': 'Livros',
                'ordering': ['titulo'],
            },
        ),
        migrations.CreateModel(
            name='CustomSectionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome')),
                ('identificador', models.CharField(max_length=50, unique=True, verbose_name='Identificador')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição')),
                ('metadados', models.JSONField(blank=True, null=True, verbose_name='Metadados')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
            ],
            options={
                'verbose_name': 'Tipo Seção',
                'verbose_name_plural': 'Tipos Seção',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='DefaultShelfType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome')),
                ('identificador', models.CharField(max_length=50, unique=True, verbose_name='Identificador')),
                ('filtro_campo', models.CharField(max_length=50, verbose_name='Campo do Filtro')),
                ('filtro_valor', models.CharField(max_length=50, verbose_name='Valor do Filtro')),
                ('ordem', models.IntegerField(default=0, verbose_name='Ordem')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
            ],
            options={
                'verbose_name': 'Prateleira Padrão',
                'verbose_name_plural': 'Prateleiras Padrão',
                'ordering': ['ordem'],
            },
        ),
        migrations.CreateModel(
            name='HomeSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título')),
                ('tipo', models.CharField(choices=[('shelf', 'Prateleira de Livros'), ('video', 'Seção de Vídeos'), ('ad', 'Área de Propaganda'), ('link_grid', 'Grade de Links'), ('banner', 'Banner Personalizado'), ('custom', 'Seção Personalizada'), ('background', 'Imagem de Fundo do Site')], max_length=20, verbose_name='Tipo de Seção')),
                ('ordem', models.IntegerField(default=0, verbose_name='Ordem de Exibição')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('css_class', models.CharField(blank=True, max_length=100, verbose_name='Classe CSS')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
            ],
            options={
                'verbose_name': 'Seção',
                'verbose_name_plural': 'Seções',
                'ordering': ['ordem', 'titulo'],
            },
        ),
        migrations.CreateModel(
            name='VideoItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(blank=True, max_length=200, null=True, verbose_name='Título')),
                ('url', models.URLField(verbose_name='URL do Vídeo')),
                ('thumbnail', models.ImageField(blank=True, upload_to='videos/thumbnails/', verbose_name='Thumbnail')),
                ('ordem', models.IntegerField(default=0, verbose_name='Ordem')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
            ],
            options={
                'verbose_name': 'Vídeo',
                'verbose_name_plural': 'Vídeos',
                'ordering': ['ordem'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('cpf', models.CharField(blank=True, max_length=11, null=True, unique=True, verbose_name='CPF')),
                ('data_nascimento', models.DateField(blank=True, null=True, verbose_name='Data de Nascimento')),
                ('telefone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Telefone')),
                ('foto', stdimage.models.StdImageField(blank=True, force_min_size=False, null=True, upload_to='users', variations={'thumbnail': {'crop': True, 'height': 100, 'width': 100}}, verbose_name='Foto')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Staff')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='Data de Entrada')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Data de Modificação')),
                ('email_verified', models.BooleanField(default=False, verbose_name='Email Verificado')),
                ('email_verification_token', models.CharField(blank=True, max_length=100, null=True, verbose_name='Token de Verificação')),
                ('password_history', models.JSONField(blank=True, default=list, verbose_name='Histórico de Senhas')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AuthorSectionItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordem', models.IntegerField(default=0, verbose_name='Ordem')),
                ('added_at', models.DateTimeField(auto_now_add=True, verbose_name='Adicionado em')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.author', verbose_name='Autor')),
                ('author_section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.authorsection', verbose_name='Seção de Autores')),
            ],
            options={
                'verbose_name': 'Item de Autor',
                'verbose_name_plural': 'Itens de Autor',
                'ordering': ['ordem', '-added_at'],
                'unique_together': {('author_section', 'author')},
            },
        ),
        migrations.AddField(
            model_name='authorsection',
            name='autores',
            field=models.ManyToManyField(related_name='sections', through='core.AuthorSectionItem', to='core.author', verbose_name='Autores'),
        ),
        migrations.CreateModel(
            name='BookAuthor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(blank=True, help_text='Ex: Autor principal, Co-autor, Editor, etc.', max_length=100, verbose_name='Função')),
                ('is_primary', models.BooleanField(default=False, verbose_name='Autor Principal')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.author', verbose_name='Autor')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.book', verbose_name='Livro')),
            ],
            options={
                'verbose_name': 'Autor do Livro',
                'verbose_name_plural': 'Autores dos Livros',
                'ordering': ['is_primary', 'id'],
                'unique_together': {('book', 'author')},
            },
        ),
        migrations.AddField(
            model_name='book',
            name='authors',
            field=models.ManyToManyField(related_name='books', through='core.BookAuthor', to='core.author', verbose_name='Autores'),
        ),
        migrations.CreateModel(
            name='BookShelfItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordem', models.IntegerField(default=0, verbose_name='Ordem')),
                ('added_at', models.DateTimeField(auto_now_add=True, verbose_name='Adicionado em')),
                ('livro', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.book', verbose_name='Livro')),
            ],
            options={
                'verbose_name': 'Item da Prateleira',
                'verbose_name_plural': 'Itens da Prateleira',
                'ordering': ['ordem', '-added_at'],
            },
        ),
        migrations.CreateModel(
            name='BookShelfSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_shelf', models.CharField(blank=True, choices=[('latest', 'Últimos Adicionados'), ('bestsellers', 'Mais Vendidos'), ('most_viewed', 'Mais Acessados'), ('featured', 'Destaques'), ('movies', 'Adaptados para Filme/Série'), ('manga', 'Mangás'), ('custom', 'Personalizada')], help_text='Usado apenas para compatibilidade. Preferir o campo "Tipo de Prateleira Personalizada".', max_length=20, verbose_name='Tipo de Prateleira (Legado)')),
                ('max_livros', models.IntegerField(default=12, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(50)], verbose_name='Máximo de Livros')),
                ('livros', models.ManyToManyField(related_name='home_shelves', through='core.BookShelfItem', to='core.book', verbose_name='Livros')),
                ('shelf_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.defaultshelftype', verbose_name='Tipo de Prateleira Personalizada')),
                ('section', models.OneToOneField(limit_choices_to={'tipo': 'shelf'}, on_delete=django.db.models.deletion.CASCADE, related_name='book_shelf', to='core.homesection', verbose_name='Seção')),
            ],
            options={
                'verbose_name': 'Prateleira',
                'verbose_name_plural': 'Prateleiras',
            },
        ),
        migrations.AddField(
            model_name='bookshelfitem',
            name='shelf',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.bookshelfsection', verbose_name='Prateleira'),
        ),
        migrations.CreateModel(
            name='CustomSectionLayout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome')),
                ('identificador', models.CharField(max_length=50, unique=True, verbose_name='Identificador')),
                ('template_path', models.CharField(max_length=200, verbose_name='Caminho do Template')),
                ('imagem_preview', models.ImageField(blank=True, upload_to='layouts/', verbose_name='Imagem de Preview')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('section_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='layouts', to='core.customsectiontype', verbose_name='Tipo de Seção')),
            ],
            options={
                'verbose_name': 'Layout',
                'verbose_name_plural': 'Layouts',
                'ordering': ['section_type', 'nome'],
            },
        ),
        migrations.CreateModel(
            name='CustomSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('layout', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sections', to='core.customsectionlayout', verbose_name='Layout')),
                ('section_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='custom_sections', to='core.customsectiontype', verbose_name='Tipo de Conteúdo')),
                ('section', models.OneToOneField(limit_choices_to={'tipo': 'custom'}, on_delete=django.db.models.deletion.CASCADE, related_name='custom_section', to='core.homesection', verbose_name='Seção')),
            ],
            options={
                'verbose_name': 'Seção Especial',
                'verbose_name_plural': 'Seções Especiais',
            },
        ),
        migrations.CreateModel(
            name='EventItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título')),
                ('data_evento', models.DateTimeField(verbose_name='Data do Evento')),
                ('local', models.CharField(blank=True, max_length=200, verbose_name='Local')),
                ('descricao', models.TextField(blank=True, verbose_name='Descrição')),
                ('imagem', models.ImageField(blank=True, upload_to='events/', verbose_name='Imagem')),
                ('url', models.URLField(blank=True, verbose_name='Link para inscrição/detalhes')),
                ('em_destaque', models.BooleanField(default=False, verbose_name='Em Destaque')),
                ('ordem', models.IntegerField(default=0, verbose_name='Ordem')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('custom_section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='core.customsection', verbose_name='Seção Personalizada')),
            ],
            options={
                'verbose_name': 'Evento',
                'verbose_name_plural': 'Eventos',
                'ordering': ['ordem', 'data_evento'],
            },
        ),
        migrations.CreateModel(
            name='BackgroundSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imagem', models.ImageField(upload_to='backgrounds/', verbose_name='Imagem de Fundo')),
                ('opacidade', models.IntegerField(default=70, help_text='Define a intensidade do esmaecimento nas bordas (0-100%)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)], verbose_name='Opacidade do Esmaecimento (%)')),
                ('habilitado', models.BooleanField(default=True, verbose_name='Habilitado')),
                ('aplicar_em', models.CharField(choices=[('both', 'Ambos os temas'), ('light', 'Apenas tema claro'), ('dark', 'Apenas tema escuro')], default='both', max_length=20, verbose_name='Aplicar em')),
                ('posicao', models.CharField(choices=[('center', 'Centralizado'), ('top', 'Superior'), ('bottom', 'Inferior')], default='center', max_length=20, verbose_name='Posição')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('section', models.OneToOneField(limit_choices_to={'tipo': 'background'}, on_delete=django.db.models.deletion.CASCADE, related_name='background_settings', to='core.homesection', verbose_name='Seção')),
            ],
            options={
                'verbose_name': 'Configuração de Background',
                'verbose_name_plural': 'Configurações de Background',
            },
        ),
        migrations.AddField(
            model_name='authorsection',
            name='section',
            field=models.OneToOneField(limit_choices_to={'tipo': 'custom'}, on_delete=django.db.models.deletion.CASCADE, related_name='author_section', to='core.homesection', verbose_name='Seção'),
        ),
        migrations.CreateModel(
            name='Advertisement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imagem', models.ImageField(upload_to='ads/', verbose_name='Imagem')),
                ('url', models.URLField(verbose_name='URL de Destino')),
                ('data_inicio', models.DateTimeField(verbose_name='Data de Início')),
                ('data_fim', models.DateTimeField(verbose_name='Data de Término')),
                ('clicks', models.IntegerField(default=0, verbose_name='Contagem de Cliques')),
                ('section', models.OneToOneField(limit_choices_to={'tipo': 'ad'}, on_delete=django.db.models.deletion.CASCADE, related_name='advertisement', to='core.homesection', verbose_name='Seção')),
            ],
            options={
                'verbose_name': 'Anúncio',
                'verbose_name_plural': 'Anúncios',
            },
        ),
        migrations.CreateModel(
            name='LinkGridItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título')),
                ('imagem', models.ImageField(upload_to='links/', verbose_name='Imagem')),
                ('url', models.URLField(verbose_name='URL')),
                ('ordem', models.IntegerField(default=0, verbose_name='Ordem')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('section', models.ForeignKey(limit_choices_to={'tipo': 'link_grid'}, on_delete=django.db.models.deletion.CASCADE, related_name='link_items', to='core.homesection', verbose_name='Seção')),
            ],
            options={
                'verbose_name': 'Link',
                'verbose_name_plural': 'Links',
                'ordering': ['ordem'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars/', verbose_name='Avatar')),
                ('bio', models.TextField(blank=True, max_length=500)),
                ('location', models.CharField(blank=True, max_length=30)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('interests', models.TextField(blank=True, max_length=500)),
                ('social_links', models.JSONField(blank=True, default=dict)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('favorite_quote', models.TextField(blank=True, max_length=500, verbose_name='Citação Favorita')),
                ('favorite_quote_author', models.CharField(blank=True, max_length=100, verbose_name='Autor da Citação')),
                ('favorite_quote_source', models.CharField(blank=True, max_length=200, verbose_name='Fonte da Citação')),
                ('card_style', models.JSONField(blank=True, default=cgbookstore.apps.core.models.profile.get_default_card_style)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Perfil',
                'verbose_name_plural': 'Perfis',
            },
        ),
        migrations.CreateModel(
            name='ReadingStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_books_read', models.IntegerField(default=0, verbose_name='Total de Livros Lidos')),
                ('total_pages_read', models.IntegerField(default=0, verbose_name='Total de Páginas Lidas')),
                ('reading_streak', models.IntegerField(default=0, verbose_name='Sequência Atual')),
                ('longest_streak', models.IntegerField(default=0, verbose_name='Maior Sequência')),
                ('favorite_genre', models.CharField(blank=True, max_length=50, verbose_name='Gênero Favorito')),
                ('reading_velocity', models.FloatField(default=0.0, verbose_name='Velocidade de Leitura')),
                ('books_by_month', models.JSONField(blank=True, default=dict, verbose_name='Livros por Mês')),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Estatísticas de Leitura',
                'verbose_name_plural': 'Estatísticas de Leitura',
            },
        ),
        migrations.CreateModel(
            name='UserBookShelf',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shelf_type', models.CharField(choices=[('favorito', 'Favorito'), ('lendo', 'Lendo'), ('vou_ler', 'Quero Ler'), ('lido', 'Lido')], max_length=20, verbose_name='Tipo de Prateleira')),
                ('added_at', models.DateTimeField(auto_now_add=True, verbose_name='Adicionado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shelves', to='core.book')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookshelves', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Prateleira de Usuário',
                'verbose_name_plural': 'Prateleiras de Usuários',
                'ordering': ['-added_at'],
            },
        ),
        migrations.CreateModel(
            name='VideoSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('section', models.OneToOneField(limit_choices_to={'tipo': 'video'}, on_delete=django.db.models.deletion.CASCADE, related_name='video_section', to='core.homesection', verbose_name='Seção')),
            ],
            options={
                'verbose_name': 'Seção Vídeo',
                'verbose_name_plural': 'Seções Vídeo',
            },
        ),
        migrations.CreateModel(
            name='VideoSectionItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordem', models.IntegerField(default=0, verbose_name='Ordem')),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.videoitem')),
                ('video_section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.videosection')),
            ],
            options={
                'verbose_name': 'Item de Vídeo',
                'verbose_name_plural': 'Itens de Vídeo',
                'ordering': ['ordem', '-added_at'],
                'unique_together': {('video_section', 'video')},
            },
        ),
        migrations.AddField(
            model_name='videosection',
            name='videos',
            field=models.ManyToManyField(related_name='sections', through='core.VideoSectionItem', to='core.videoitem', verbose_name='Vídeos'),
        ),
        migrations.AlterUniqueTogether(
            name='bookshelfitem',
            unique_together={('shelf', 'livro')},
        ),
        migrations.CreateModel(
            name='ReadingProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('current_page', models.PositiveIntegerField(default=1)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('last_read_at', models.DateTimeField(auto_now=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reading_progress', to='core.book')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reading_progress', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Progresso de Leitura',
                'verbose_name_plural': 'Progressos de Leitura',
                'unique_together': {('user', 'book')},
            },
        ),
        migrations.CreateModel(
            name='UserAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('achieved_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Conquista')),
                ('progress_data', models.JSONField(blank=True, default=dict, verbose_name='Dados de Progresso')),
                ('achievement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.achievement', verbose_name='Conquista')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Conquista do Usuário',
                'verbose_name_plural': 'Conquistas dos Usuários',
                'ordering': ['-achieved_at'],
                'unique_together': {('user', 'achievement')},
            },
        ),
    ]
